# Generated by Django 3.0.6 on 2020-09-14 06:09

from django.db import migrations
class TreeNode:
    def __init__(self, data, parent):
            self.category = data
            self.parent = parent
            self.children = []
            if parent != None:
                parent.children.append(self)

# ALL #
ALL = TreeNode("ALL", None)

# ACCESSORIES #
ACC = TreeNode("ACCESSORIES", ALL)
BELTS = TreeNode("BELTS", ACC)
EYEWEAR = TreeNode("EYEWEAR", ACC)

####   HATS #
HATS = TreeNode("HATS", ACC)
CAPS = TreeNode("CAPS", HATS)
BEANIES = TreeNode("BEANIES", HATS)
####   HATS #

####   JEWELRY #
JEWELRY = TreeNode("JEWELRY", ACC)
BRACELETS = TreeNode("BRACELETS", JEWELRY)
EARRINGS = TreeNode("EARRINGS", JEWELRY)
NECKLACES = TreeNode("NECKLACES", JEWELRY)
RINGS = TreeNode("RINGS", JEWELRY)
####   JEWELRY #

# ACCESSORIES #

# BAGS #
BAGS = TreeNode("BAGS", ALL)
BACKPACKS = TreeNode("BACKPACKS", BAGS)
BRIEFCASES = TreeNode("BRIEFCASES", BAGS)
DUFFLE_BAGS = TreeNode("DUFFLE BAGS", BAGS)
MESSENGER_BAGS = TreeNode("MESSENGER BAGS", BAGS)
POUCHES = TreeNode("POUCHES", BAGS)
TOTE_BAGS = TreeNode("TOTE BAGS", BAGS)
TRAVEL_BAGS = TreeNode("TRAVEL BAGS", BAGS)
# BAGS #

# CLOTHINGS #
CLOTHING = TreeNode("CLOTHING", ALL)

####    TOP #
TOP = TreeNode("TOP", CLOTHING)

#######     JACKETS #
JACKETS = TreeNode("JACKETS", TOP)
DENIM_JACKETS = TreeNode("DENIM JACKETS", JACKETS)
LEATHER_JACKETS = TreeNode("LEATHER JACKETS", JACKETS)
DOWN_JACKETS = TreeNode("DOWN JACKETS", JACKETS)
FUR_SHEARLING = TreeNode("FUR & SHEARLING", JACKETS)
#######     JACKETS #

#######     COATS #
COATS = TreeNode("COATS", TOP)
PEA_COATS = TreeNode("PEA COATS", COATS)
LONG_COATS = TreeNode("LONG COATS", COATS)
TRENCH_COATS = TreeNode("TRENCH COATS", COATS)
#######     COATS #

SHIRTS = TreeNode("SHIRTS", TOP)

#######     SWEATERS #
SWEATERS = TreeNode("SWEATERS", TOP)
CARDIGANS = TreeNode("CARDIGANS", SWEATERS)
CREWNECKS = TreeNode("CREWNECKS", SWEATERS)
HOODIES = TreeNode("HOODIES", SWEATERS)
SWEATSHIRTS = TreeNode("SWEATSHIRTS", SWEATERS)
TURTLENECKS = TreeNode("TURTLENECKS", SWEATERS)
V_NECKS = TreeNode("V-NECKS", SWEATERS)
#######     SWEATERS #

T_SHIRTS = TreeNode("T-SHIRTS", TOP)
TANK_TOPS = TreeNode("TANK TOPS", TOP)
POLOS = TreeNode("POLOS", TOP)
####    TOP #

####   BOTTOM #
BOTTOM = TreeNode("BOTTOM", CLOTHING)
JEANS = TreeNode("JEANS", BOTTOM)
SHORTS = TreeNode("SHORTS", BOTTOM)

#######     PANTS #
PANTS = TreeNode("PANTS", BOTTOM)
CARGO_PANTS = TreeNode("CARGO PANTS", PANTS)
LEATHER_PANTS = TreeNode("LEATHER PANTS", PANTS)
SWEATPANTS = TreeNode("SWEATPANTS", PANTS)
TROUSERS = TreeNode("TROUSERS", PANTS)
#######     PANTS #

####   BOTTOM #
# CLOTHINGS #

# SHOES #
SHOES = TreeNode("SHOES", ALL)
SNEAKERS = TreeNode("SNEAKERS", SHOES)
BOOTS = TreeNode("BOOTS", SHOES)
LACE_UPS = TreeNode("LACE UPS", SHOES)
LOAFERS = TreeNode("LOAFERS", SHOES)
SANDALS = TreeNode("SANDALS", SHOES)
# SHOES #
# ALL #

def create_category_from_tree(Category, root):
	category, created = Category.objects.get_or_create(name=root.category)
	if root.parent:
		category.parent_category, created = Category.objects.get_or_create(name=root.parent.category)
	category.save()
	for child in root.children:
		create_category_from_tree(Category, child)
	return


def populate_categories(apps, schema_editor):
	Category = apps.get_model('main', 'Category')
	def create_category_from_tree(root):
		category, created = Category.objects.get_or_create(name=root.category)
		if root.parent:
			category.parent_category, created = Category.objects.get_or_create(name=root.parent.category)
		category.save()
		for child in root.children:
			create_category_from_tree(child)
		return
	create_category_from_tree(ALL)

class Migration(migrations.Migration):

    dependencies = [
        ('main', '0003_auto_20200910_1441'),
    ]

    operations = [
    	migrations.RunPython(populate_categories),
    ]
